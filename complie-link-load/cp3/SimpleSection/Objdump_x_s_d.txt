
SimpleSection.o：     文件格式 elf32-i386
SimpleSection.o
体系结构：i386，标志 0x00000011：
HAS_RELOC, HAS_SYMS
起始地址 0x00000000

节：
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000060  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000008  00000000  00000000  00000094  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00000000  00000000  0000009c  2**2
                  ALLOC
  3 .rodata       00000004  00000000  00000000  0000009c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .note.GNU-stack 00000000  00000000  00000000  000000a0  2**0
                  CONTENTS, READONLY
  5 .comment      0000001f  00000000  00000000  000000a0  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 SimpleSection.c
00000000 l    d  .text	00000000 
00000000 l    d  .data	00000000 
00000000 l    d  .bss	00000000 
00000000 l    d  .rodata	00000000 
00000004 l     O .data	00000004 static_var.0
00000000 l     O .bss	00000004 static_var2.1
00000000 l    d  .note.GNU-stack	00000000 
00000000 l    d  .comment	00000000 
00000000 g     O .data	00000004 globle_init_var
00000000 g     F .text	0000001b func1
00000000         *UND*	00000000 printf
0000001b g     F .text	00000045 main
00000004       O *COM*	00000004 globle_uninit_var


.text 节的内容：
 0000 5589e583 ec0883ec 08ff7508 68000000  U.........u.h...
 0010 00e8fcff ffff83c4 10c9c355 89e583ec  ...........U....
 0020 0883e4f0 b8000000 0083c00f 83c00fc1  ................
 0030 e804c1e0 0429c4c7 45fc0100 000083ec  .....)..E.......
 0040 0ca10000 00000305 04000000 0345fc03  .............E..
 0050 45f850e8 fcffffff 83c4108b 45fcc9c3  E.P.........E...
.data 节的内容：
 0000 54000000 55000000                    T...U...        
.rodata 节的内容：
 0000 25640a00                             %d..            
.comment 节的内容：
 0000 00474343 3a202847 4e552920 332e332e  .GCC: (GNU) 3.3.
 0010 33202853 75534520 4c696e75 782900    3 (SuSE Linux). 
反汇编 .text 节：

00000000 <func1>:
   0:	55                   	push   %ebp
   1:	89 e5                	mov    %esp,%ebp
   3:	83 ec 08             	sub    $0x8,%esp
   6:	83 ec 08             	sub    $0x8,%esp
   9:	ff 75 08             	pushl  0x8(%ebp)
   c:	68 00 00 00 00       	push   $0x0
			d: R_386_32	.rodata
  11:	e8 fc ff ff ff       	call   12 <func1+0x12>
			12: R_386_PC32	printf
  16:	83 c4 10             	add    $0x10,%esp
  19:	c9                   	leave  
  1a:	c3                   	ret    

0000001b <main>:
  1b:	55                   	push   %ebp
  1c:	89 e5                	mov    %esp,%ebp
  1e:	83 ec 08             	sub    $0x8,%esp
  21:	83 e4 f0             	and    $0xfffffff0,%esp
  24:	b8 00 00 00 00       	mov    $0x0,%eax
  29:	83 c0 0f             	add    $0xf,%eax
  2c:	83 c0 0f             	add    $0xf,%eax
  2f:	c1 e8 04             	shr    $0x4,%eax
  32:	c1 e0 04             	shl    $0x4,%eax
  35:	29 c4                	sub    %eax,%esp
  37:	c7 45 fc 01 00 00 00 	movl   $0x1,0xfffffffc(%ebp)
  3e:	83 ec 0c             	sub    $0xc,%esp
  41:	a1 00 00 00 00       	mov    0x0,%eax
			42: R_386_32	.bss
  46:	03 05 04 00 00 00    	add    0x4,%eax
			48: R_386_32	.data
  4c:	03 45 fc             	add    0xfffffffc(%ebp),%eax
  4f:	03 45 f8             	add    0xfffffff8(%ebp),%eax
  52:	50                   	push   %eax
  53:	e8 fc ff ff ff       	call   54 <main+0x39>
			54: R_386_PC32	func1
  58:	83 c4 10             	add    $0x10,%esp
  5b:	8b 45 fc             	mov    0xfffffffc(%ebp),%eax
  5e:	c9                   	leave  
  5f:	c3                   	ret    
